;this should be run from cosmosis home directory. 'cosmosis cosmosis-standard-library/noSampleVariance/ps_mod/demo6.ini'
[runtime]
; The test sampler just runs a single parameter set
sampler = grid

[test]
save_dir=demo6_output
fatal_errors=T


[grid]
; The number of samples to take in each
; dimension in which the parameters vary
nsample_dimension = 2

[output]
filename=grid_out
format=text

; The pipeline section contains information
; that describes the sequence of calculations
; to be done and what we want out at the end
[pipeline]
; The list of modules to be run, in this order.
; The modules named here must appear as sections below
modules = consistency camb halofit supersample_variance ps_mod load_nz shear_shear 2pt cfhtlens
values = cosmosis-standard-library/noSampleVariance/ps_mod/values6.ini

likelihoods = cfhtlens
extra_output = 

; We can get a little more output during the run by setting some values
quiet=F
timing=T
debug=F

[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=2500
feedback=0

[halofit]
file = cosmosis-standard-library/boltzmann/halofit/halofit_module.so

; This is an example of a very simple module - it simple loads in 
; a file once at the start when setting up and supplies fixed data
; when executed.

[ps_mod]
file=cosmosis-standard-library/noSampleVariance/ps_mod/ps_mod.py

; supersample variance
[supersample_variance]
; somewhat arbitrary kmax
file=cosmosis-standard-library/noSampleVariance/ps_mod/supersample_variance.py
kmax=100
window_mode=fourier_tophat
delta_b_fixed=F

[load_nz]
file = cosmosis-standard-library/number_density/load_nz/load_nz.py
filepath = cosmosis-standard-library/likelihood/cfhtlens/combined_nz.txt

; This module uses the Limber approximation to compute shear-shear C_ell
; given the shear kernel (which is derived from the number density and 
; from geometry)
[shear_shear]
file = cosmosis-standard-library/shear/spectra/interface.so
ell_min = 20.0
ell_max = 10000.0
n_ell = 150
intrinsic_alignments=F
matter_spectra=F

; This module converts shear spectra from c_ell to xi(theta).
; It is slow and can be a little dodgy at small theta, so if you have a better
; version it would be great if you be happy to add it (or have us add it) to cosmosis
[2pt]
file = cosmosis-standard-library/shear/cl_to_xi/cl_to_xi_interface.py
theta_min = 1.0
theta_max = 50.0
n_theta = 50


; The CFHTLens likelihood
[cfhtlens]
file = cosmosis-standard-library/likelihood/cfhtlens/cfhtlens_interface.py

; The consistency module translates between our chosen parameterization
; ; and any other that modules in the pipeline may want (e.g. camb)
; [consistency]
; file = cosmosis-standard-library/utility/consistency/consistency_interface.py

