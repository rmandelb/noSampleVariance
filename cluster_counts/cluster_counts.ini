[runtime]
; The emcee sampler, which uses the Goodman & Weare algorithm
sampler = test

[test]
; These are the parameters for this sampler.
; In this case there is just one parameter
save_dir=cluster_counts_output

[emcee]
; The emcee sampler uses the concept of walkers, a collection
; of live points.  Sampling is done along lines that connect
; pairs of walkers.  The number of walkers must be at least
; 2*nparam + 1, but in general more than that usually works
; better.
walkers = 64
; This many samples is overkill, just to make the plots
; look a lot nicer
samples = 1000
; This is the interval at which convergence diagnostics
; are performed
nsteps = 100

[pymc]
nsteps = 500
samples = 30000
adaptive_mcmc = True

; We can get a little more output during the run by setting some values
quiet=F
timing=F
debug=T

[output]
filename = cluster_counts.txt
format = text
verbosity= debug

[pipeline]
; We use two likelihoods, the JLA (for high redshift) and
; Riess 2011 to anchor H0, which is otherwise degenerate
; with the nuisance parameter M
modules = camb 
values = cluster_counts/cluster_counts_values.ini
extra_output =
likelihoods = 
quiet=T
debug=F
timing=F

[camb]
; For background-only data we do not need a full
; Boltzmann evaluation, just D(z), etc.
; Setting mode=background means we get this.
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=background
feedback=0
